/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.companytobe.fifa.test;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author lenovo
 */
public class League_Form extends javax.swing.JFrame {

    private String league;

    /**
     * Creates new form League_form
     */
    public League_Form() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField_leaguename = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_matches = new javax.swing.JTable();
        jButton_newleague = new javax.swing.JButton();
        jButton_playmatch = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_playedmatches = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_leaguetable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton_displayleague = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("LEAGUE COMPETITION");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("league name:");

        jTable_matches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "team1", "vs", "team2"
            }
        ));
        jScrollPane1.setViewportView(jTable_matches);

        jButton_newleague.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_newleague.setText("create new league");
        jButton_newleague.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_newleagueActionPerformed(evt);
            }
        });

        jButton_playmatch.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton_playmatch.setText("play selected match");
        jButton_playmatch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_playmatchActionPerformed(evt);
            }
        });

        jTable_playedmatches.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "team1", "vs", "team2", "score1", "score2"
            }
        ));
        jScrollPane2.setViewportView(jTable_playedmatches);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("PLAYED MATCHES");

        jTable_leaguetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "pos", "team", "GP", "W", "D", "L", "GF", "GA", "GD", "points"
            }
        ));
        jScrollPane3.setViewportView(jTable_leaguetable);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("LEAGUE TABLE");

        jButton_displayleague.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jButton_displayleague.setText("display league");
        jButton_displayleague.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_displayleagueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(317, 317, 317)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(162, 162, 162)
                        .addComponent(jLabel2)
                        .addGap(37, 37, 37)
                        .addComponent(jTextField_leaguename, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(jButton_newleague)
                        .addGap(57, 57, 57)
                        .addComponent(jButton_displayleague, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(131, 131, 131)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(250, 250, 250)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jButton_playmatch, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE)))
                .addGap(113, 113, 113))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_leaguename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_newleague)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jButton_displayleague))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton_playmatch)
                .addContainerGap(102, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_newleagueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_newleagueActionPerformed
        try {
            league = JOptionPane.showInputDialog("Enter league name:");
            int numberOfTeams;
            boolean isFound = new My_Cnx().isInDB(league);

            if (league.isEmpty()) {
                throw new Exception("cannot leave league name blank");
            }
            if (isFound) {
                throw new SQLException("league name \"" + league + "\" is already in DB");
            }

            String choice = JOptionPane.showInputDialog("Enter number of teams to participate(more than 3):");
            if (choice.isEmpty()) {
                throw new Exception("cannot leave number of teams blank");
            } else {
                numberOfTeams = Integer.parseInt(choice);
            }
            League a = new League(league);

            a.createLeagueTables(numberOfTeams);

        } catch (Exception e) {
            Logger.getLogger(League_Form.class.getName()).log(Level.SEVERE, null, e);
            JOptionPane.showMessageDialog(null, e.getMessage(), "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton_newleagueActionPerformed

    private void jButton_playmatchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_playmatchActionPerformed
        try {
            int status;
            int match_id;

            int selectedRow = jTable_matches.getSelectedRow();
            if (selectedRow == -1) {
                throw new Exception("No row is selected");
            }

            int matchd = selectedRow + 1;
            String table = league + "_matches";
            String field = "match_id";
            int value = matchd;
            ResultSet result = new My_Cnx().read(table, field, value);
            while (result.next()) {
                match_id = result.getInt("match_id");
                status = result.getInt("status");

                if (status != 0) {
                    throw new Exception("game has already been played");
                }
                TableModel model = jTable_matches.getModel();
                String team1 = model.getValueAt(selectedRow, 0).toString();
                String team2 = model.getValueAt(selectedRow, 2).toString();
                int score1;
                int score2;

                String score1_input = JOptionPane.showInputDialog(null, "Enter score for " + team1);
                if (score1_input.isEmpty()) {
                    throw new Exception("Score 1 cannot be left blank");
                } else {
                    score1 = Integer.parseInt(score1_input);
                }
                String score2_input = JOptionPane.showInputDialog(null, "Enter score for " + team2);
                if (score2_input.isEmpty()) {
                    throw new Exception("Score 2 cannot be left blank");
                } else {
                    score2 = Integer.parseInt(score2_input);
                }

                DefaultTableModel leagueTableModel = (DefaultTableModel) jTable_leaguetable.getModel();
                DefaultTableModel playedMatchesModel = (DefaultTableModel) jTable_playedmatches.getModel();
                DefaultTableModel matchesModel = (DefaultTableModel) jTable_matches.getModel();

                Match b = new Match(league);
                b.recordMatchResults(team1, team2, score1, score2);
                b.updateMatchStatus(match_id);
                b.updateTableModel("_matchesplayed", playedMatchesModel);

                League a = new League(league);
                League_Results r1 = a.getTeamLeagueResult(team1);
                League_Results r2 = a.getTeamLeagueResult(team2);

                League_update updata = new League_update(r1, score1, score2);
                League_update updata2 = new League_update(r2, score2, score1);

                League_Results rnew1 = updata.compute();
                League_Results rnew2 = updata2.compute();

                a.recordTeamLeagueResults(team1, rnew1);
                a.recordTeamLeagueResults(team2, rnew2);
                a.displayLeagueTable(leagueTableModel);

            }

        } catch (Exception ex) {
            Logger.getLogger(League.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Alert", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jButton_playmatchActionPerformed

    private void jButton_displayleagueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_displayleagueActionPerformed
        try {
            league = jTextField_leaguename.getText();
            if (league.isEmpty()) {
                throw new Exception("please enter league name");
            }
            League a = new League(league);
            boolean isFound = new My_Cnx().isInDB(league);
            Match b = new Match(league);

            if (!isFound) {
                throw new SQLException("league does not exist. create new league");
            }
            DefaultTableModel leagueTableModel = (DefaultTableModel) jTable_leaguetable.getModel();
            DefaultTableModel leagueMatchesModel = (DefaultTableModel) jTable_matches.getModel();
            DefaultTableModel playedMatchesModel = (DefaultTableModel) jTable_playedmatches.getModel();

            a.displayLeagueTable(leagueTableModel);
            a.displayLeagueMatches(leagueMatchesModel);
            b.updateTableModel("_matchesplayed", playedMatchesModel);

        } catch (SQLException ex) {
            Logger.getLogger(League.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, ex.getMessage(), "Alert", JOptionPane.WARNING_MESSAGE);
        } catch (Exception ex) {
            Logger.getLogger(League_Form.class.getName()).log(Level.SEVERE, null, ex);
            String message = ex.getMessage();
            if (!message.isEmpty()) {
                JOptionPane.showMessageDialog(null, ex.getMessage(), "Alert", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_jButton_displayleagueActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(League_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(League_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(League_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(League_Form.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new League_Form().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_displayleague;
    private javax.swing.JButton jButton_newleague;
    private javax.swing.JButton jButton_playmatch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable_leaguetable;
    private javax.swing.JTable jTable_matches;
    private javax.swing.JTable jTable_playedmatches;
    private javax.swing.JTextField jTextField_leaguename;
    // End of variables declaration//GEN-END:variables
}
